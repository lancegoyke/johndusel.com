name: Deploy to EC2 instance

on:
  push:
    branches:
      - "master"
      - "cd/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      EC2_SECURITY_GROUP_ID: sg-0247107399b909b0e
      SSH_CMD: ssh -A -i ~/.ssh/gh_deploy_johndusel ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} -p ${{ secrets.EC2_PORT }}
      REPO_DIR: /home/${{ secrets.EC2_USERNAME }}/${{ secrets.EC2_HOST }}
      OPT_DIR: /opt/${{ secrets.EC2_HOST }}
      VENV_DIR: /opt/${{ secrets.EC2_HOST }}/backend/.venv
      CONF_DIR: /etc/opt/${{ secrets.EC2_HOST }}
      DATA_DIR: /var/opt/${{ secrets.EC2_HOST }}
      DJANGO_BASE_DIR: /opt/${{ secrets.EC2_HOST }}/backend
      STATICFILES_DIR: /var/opt/${{ secrets.EC2_HOST }}/staticfiles
      NEXTJS_BASE_DIR: /opt/${{ secrets.EC2_HOST }}/frontend
      NEXTJS_BUILD_DIR: /var/opt/${{ secrets.EC2_HOST }}/frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::497780720908:role/johndusel-github-oidc-provider-Role-GVUK6BLT9IMY
          aws-region: us-east-2

      - name: Get runner IP address
        id: ip
        run: echo "RUNNER_IPV4=$(curl -s https://api.ipify.org)" >> $GITHUB_ENV

      - name: Whitelist runner IP address
        env:
          RUNNER_IPV4: ${{ env.RUNNER_IPV4 }}
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id $EC2_SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr $RUNNER_IPV4/32

      - name: webfactory/ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.GH_DEPLOY_PRIVATE_KEY }}

      - name: Write SSH key to runner
        run: |
          mkdir -p ~/.ssh
          echo '${{ secrets.EC2_PRIVATE_KEY }}' > ~/.ssh/gh_deploy_johndusel
          chmod 600 ~/.ssh/gh_deploy_johndusel
          ssh-keyscan -H ${{ secrets.EC2_HOST }} > ~/.ssh/known_hosts

      - name: Pull code from GitHub
        run: |
          $SSH_CMD "sudo apt-get update && sudo apt-get upgrade -y && cd $REPO_DIR && git switch master && git pull"

      - name: Copy to /opt and change permissions
        run: |
          $SSH_CMD "sudo cp --recursive --update --preserve $REPO_DIR /opt && sudo chown -R root:root $OPT_DIR && sudo chmod 0755 $OPT_DIR"

      - name: Install Python dependencies
        run: |
          $SSH_CMD "ENV_PATH=$CONF_DIR/.env PYTHONPATH=$CONF_DIR:$DJANGO_BASE_DIR sudo $VENV_DIR/bin/pip install -r $DJANGO_BASE_DIR/requirements.txt"

      - name: Python manage.py migrate
        run: |
          $SSH_CMD "sudo ENV_PATH=$CONF_DIR/.env PYTHONPATH=$CONF_DIR:$DJANGO_BASE_DIR DJANGO_SETTINGS_MODULE=settings $VENV_DIR/bin/python $DJANGO_BASE_DIR/manage.py migrate --noinput"

      - name: Python manage.py collectstatic
        run: |
          $SSH_CMD "sudo ENV_PATH=$CONF_DIR/.env PYTHONPATH=$CONF_DIR:$DJANGO_BASE_DIR DJANGO_SETTINGS_MODULE=settings $VENV_DIR/bin/python $DJANGO_BASE_DIR/manage.py collectstatic --noinput"

      - name: Chown static files
        run: |
          $SSH_CMD "sudo chown -R ${{ secrets.EC2_HOST }}:${{ secrets.EC2_HOST }} $STATICFILES_DIR"

      - name: Restart gunicorn
        run: |
          $SSH_CMD "sudo systemctl restart gunicorn-${{ secrets.EC2_HOST }} || sudo systemctl start gunicorn-${{ secrets.EC2_HOST }}"

      - name: Copy frontend into data directory and change owner
        run: |
          $SSH_CMD "sudo cp -R $NEXTJS_BASE_DIR $DATA_DIR && sudo chown -R ${{ secrets.EC2_HOST }}:${{ secrets.EC2_HOST }} $DATA_DIR"

      - name: Upgrade npm and node
        run: |
          $SSH_CMD "sudo npm install -g npm@latest"
          $SSH_CMD "sudo npm install -g n@latest"
          $SSH_CMD "sudo n latest"

      - name: Install Node.js dependencies and build Next.js site
        run: |
          $SSH_CMD "cd $NEXTJS_BUILD_DIR && su ${{ secrets.EC2_HOST }} -c 'npm install' && su ${{ secrets.EC2_HOST }} -c 'npm run build'"

      - name: Restart Next.js service
        run: |
          $SSH_CMD "sudo systemctl restart nextjs-${{ secrets.EC2_HOST }} || sudo systemctl start nextjs-${{ secrets.EC2_HOST }}"

      - name: Revoke runner IP address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id $EC2_SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr $RUNNER_IPV4/32

      - name: Remove SSH key from runner
        run: |
          rm -rf ~/.ssh
